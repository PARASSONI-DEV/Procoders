# Generated by Django 4.1.3 on 2022-11-14 18:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=70)),
                ('last_name', models.CharField(max_length=70)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_no', models.CharField(max_length=15)),
                ('dob', models.DateField(null=True)),
                ('location', models.CharField(max_length=20)),
                ('collage_name', models.CharField(max_length=55)),
                ('user_profile_image', models.ImageField(unique=True, upload_to='user_profile_images', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'PNG', 'SVG', 'jfif'])])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BcaFileUpload',
            fields=[
                ('Bca_id', models.AutoField(primary_key=True, serialize=False)),
                ('bca_file_name', models.CharField(blank=True, max_length=150, null=True)),
                ('Hindi_write_file', models.FileField(blank=True, null=True, upload_to='')),
                ('English_write_file', models.FileField(blank=True, null=True, upload_to='')),
                ('category', models.CharField(choices=[('B1', 'B.C.A-1'), ('B2', 'B.C.A-2'), ('B2', 'B.C.A-3')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='McaFileUpload',
            fields=[
                ('Mca_id', models.AutoField(primary_key=True, serialize=False)),
                ('Mca_file_name', models.CharField(blank=True, max_length=150, null=True)),
                ('Hindi_write_file', models.FileField(blank=True, null=True, upload_to='')),
                ('English_write_file', models.FileField(blank=True, null=True, upload_to='')),
                ('category', models.CharField(choices=[('M1', 'M.C.A-1-SEM'), ('M2', 'M.C.A-2-SEM'), ('M3', 'M.C.A-3-SEM'), ('M4', 'M.C.A-4-SEM')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='FeedBack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stu_email', models.EmailField(max_length=254)),
                ('stu_FeedBackText', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
